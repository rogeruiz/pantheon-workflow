#!/usr/bin/env node

var program = require( 'commander' );
var fs = require( 'fs' );
var _ = require( 'lodash' );
var RSVP = require( 'rsvp' );
var Rsync = require( 'rsync' );
var loadRc = require( './load-rc' );

program
  .option( '-p, --project <name>', 'project name on Pantheon' )
  .option( '-n, --dry-run', 'show what would have been transferred' )
  .parse( process.argv );

loadRc.then(function( projects ) {

  var pkgs = program.args;
  var direction = pkgs[ 0 ];
  var project = pkgs[ 1 ];
  var mediaDir = '$MEDIA_DIR/wp-content/uploads/';
  var pantheonEndpoint = '$ENV.$UUID@appserver.$ENV.$UUID.drush.in:code/wp-content/uploads/';

  if ( ! pkgs.length ) {
    console.error( 'A direction is required!' );
    console.log( 'example: <up> | <down>' );
    process.exit( 1 );
  }

  if (projects[project]) {
    project = projects[project];
    mediaDir = mediaDir.replace(/\$MEDIA_DIR/, project.root);
    pantheonEndpoint = pantheonEndpoint.replace(/\$ENV/g, project.env).replace(/\$UUID/g, project.uuid);
  } else {
    console.log('project not found in .pantheonrc file');
    console.log('please verify the project <%s> exists in your .pantheonrc file', program.project);
    process.exit(1);
  }

  var src, dest;
  if (direction === 'up') {
    src = mediaDir;
    dest = pantheonEndpoint;
  } else if (direction === 'down') {
    src = pantheonEndpoint;
    dest = mediaDir;
  }

  var rsync = Rsync.build({
    flags: 'rlvz',
    progress: true,
    exclude: [
      '.git',
      '.DS_Store'
    ],
    shell: 'ssh -p 2222',
    source: src,
    destination: dest,
    });
  rsync.set('size-only');
  rsync.set('ipv4');
  if (program.dryRun) {
    rsync.set('dry-run');
  }

  rsync.execute(function(err, code, cmd) {
    if (code === 0) {
      console.log('ran successful `%s`', cmd);
    } else {
      console.error(err);
    }
  }, function(data) {
    console.log(data.toString());
  });

});
